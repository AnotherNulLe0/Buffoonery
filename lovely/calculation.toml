[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# ALL CODE RELATED TO XCHIPS AND EMULT IS TAKEN FROM MathIsFun's TALISMAN. ALL CREDIT IS THEIRS.
# arbitrary operations on chips and mult
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if effects.jokers.Xmult_mod then mult = mod_mult(mult*effects.jokers.Xmult_mod);extras.mult = true  end"
position = "after"
payload = '''
if effects.jokers.Emult_mod then mult = mod_mult(mult^effects.jokers.Emult_mod);extras.mult = true end
if effects.jokers.Xchip_mod then hand_chips = mod_chips(hand_chips*effects.jokers.Xchip_mod);extras.hand_chips = true end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if effect.Xmult_mod then mult = mod_mult(mult*effect.Xmult_mod);extras.mult = true  end"
position = "after"
payload = '''
if effect.Emult_mod then mult = mod_mult(mult^effect.Emult_mod);extras.mult = true end
if effect.Xchip_mod then hand_chips = mod_chips(hand_chips*effect.Xchip_mod);extras.hand_chips = true end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "x_mult = center.config.Xmult or 1,"
position = "after"
payload = '''
e_mult = center.config.Emult or 0,
x_chips = center.config.Xchips or 0,
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local p_dollars = card:get_p_dollars()"
position = "before"
payload = '''
local x_chips = card:get_chip_x_bonus()
if x_chips > 0 then
	ret.x_chips = x_chips
end

local e_mult = card:get_chip_e_mult()
if e_mult > 0 then
	ret.e_mult = e_mult
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif eval_type == 'dollars' then"
position = "before"
payload = '''
elseif eval_type == 'x_chips' then 
	sound = 'chips1'
	amt = amt
	text = 'X' .. amt
	colour = G.C.CHIPS
	config.type = 'fade'
	config.scale = 0.7
elseif eval_type == 'e_mult' then 
	sound = 'multhit2'
	amt = amt
	text = '^' .. amt .. ' Mult'
	colour = G.C.MULT
	config.type = 'fade'
	config.scale = 0.7
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if effects[ii].message then"
position = "before"
payload = '''
if effects[ii].x_chips then
	mod_percent = true
	hand_chips = mod_chips(hand_chips*effects[ii].x_chips)
	update_hand_text({delay = 0}, {chips = hand_chips})
	card_eval_status_text(G.hand.cards[i], 'x_chips', effects[ii].x_chips, percent)
end
if effects[ii].e_mult then
	mod_percent = true
	mult = mod_mult(mult^effects[ii].e_mult)
	update_hand_text({delay = 0}, {mult = mult})
	card_eval_status_text(G.hand.cards[i], 'e_mult', effects[ii].e_mult, percent)
end

'''
match_indent = true